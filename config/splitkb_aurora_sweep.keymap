/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

&led_strip {
    chain-length = <23>;
};

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <185>;
};

&sl {
    release-after-ms = <1000>;
    quick-release;
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};


/ { 
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <40>;
            key-positions = <16 17>;
            bindings = <&kp ESC>;
            layers = <0>;
        };
        
            combo_return {
            timeout-ms = <40>;
            key-positions = <17 18>;
            bindings = <&kp RETURN>;
            layers = <0>;
        };
        
        combo_save {
            timeout-ms = <40>;
            key-positions = <12 13>;
            bindings = <&kp LG(S)>;
            layers = <0>;
        };
        
        combo_copy {
            timeout-ms = <40>;
            key-positions = <13 22>;
            bindings = <&kp LG(C)>;
            layers = <0>;
        };
        
        combo_paste {
            timeout-ms = <40>;
            key-positions = <12 23>;
            bindings = <&kp LG(V)>;
            layers = <0>;
        };
        
        combo_bol {
            timeout-ms = <40>;
            key-positions = <6 7>;
            bindings = <&kp LG(LEFT)>;
            layers = <0>;
        };
        
        combo_eol {
            timeout-ms = <40>;
            key-positions = <7 8>;
            bindings = <&kp LG(RIGHT)>;
            layers = <0>;
        };

        combo_word_back {
            timeout-ms = <40>;
            key-positions = <7 16>;
            bindings = <&kp LA(LEFT)>;
            layers = <0>;
        };

        combo_word_forward {
            timeout-ms = <40>;
            key-positions = <7 18>;
            bindings = <&kp LA(RIGHT)>;
            layers = <0>;
        };

        combo_home {
            timeout-ms = <40>;
            key-positions = <6 17>;
            bindings = <&kp HOME>;
            layers = <0>;
        };

        combo_end {
            timeout-ms = <40>;
            key-positions = <8 17>;
            bindings = <&kp END>;
            layers = <0>;
        };

        combo_page_down {
            timeout-ms = <40>;
            key-positions = <26 27>;
            bindings = <&kp PAGE_DOWN>;
            layers = <0>;
        };

        combo_page_up {
            timeout-ms = <40>;
            key-positions = <27 28>;
            bindings = <&kp PAGE_UP>;
            layers = <0>;
        };
	
				combo_duplicate_code_down {
            timeout-ms = <50>;
            key-positions = <26 27 28>;
				    bindings = <&kp LA(LS(DOWN))>;
            layers = <0>;
        };

        combo_duplicate_code_up {
            timeout-ms = <50>;
            key-positions = <6 7 8>;
            bindings = <&kp LA(LS(UP))>;
            layers = <0>;
        };

        combo_focus_left {
            timeout-ms = <35>;
            key-positions = <17 26>;
            bindings = <&kp LC(H)>;
            layers = <0>;
        };

        combo_focus_right {
            timeout-ms = <50>;
            key-positions = <17 28>;
            bindings = <&kp LC(L)>;
            layers = <0>;
        };
	
        combo_split_left {
            timeout-ms = <40>;
            key-positions = <16 27>;
            bindings = <&kp LC(LA((H)))>;
            layers = <0>;
        };

        combo_split_right {
            timeout-ms = <40>;
            key-positions = <18 27>;
            bindings = <&kp LC(LA((L)))>;
            layers = <0>;
        };

        combo_tab_next {
            timeout-ms = <40>;
            key-positions = <2 13>;
            bindings = <&kp LC(TAB)>;
            layers = <0>;
        };

        combo_tab_previous {
            timeout-ms = <40>;
            key-positions = <2 11>;
            bindings = <&kp LC(LS(TAB))>;
            layers = <0>;
        };

        combo_tab_swap_left {
            timeout-ms = <40>;
            key-positions = <1 12>;
            bindings = <&kp LC(LS(PAGE_UP))>;
            layers = <0>;
        };

        combo_tab_swap_right {
            timeout-ms = <40>;
            key-positions = <3 12>;
            bindings = <&kp LC(LS(PAGE_DOWN))>;
            layers = <0>;
        };
        
        combo_panel_down {
            timeout-ms = <40>;
            key-positions = <0 1>;
            bindings = <&kp LG(LC(LA(J)))>;
            layers = <0>;
        };
        
        combo_file_explorer {
            timeout-ms = <40>;
            key-positions = <1 2>;
            bindings = <&kp LG(LS(E))>;
            layers = <0>;
        };
        
        combo_open_file {
            timeout-ms = <40>;
            key-positions = <2 3>;
            bindings = <&kp LG(P)>;
            layers = <0>;
        };
        
        combo_close_panel {
            timeout-ms = <40>;
            key-positions = <1 10>;
            bindings = <&kp LG(B)>;
            layers = <0>;
        };
        
        combo_www_back {
            timeout-ms = <40>;
            key-positions = <1 13>;
            bindings = <&kp LG(LEFT_BRACKET)>;
            layers = <0>;
        };
        
        combo_www_forward {
            timeout-ms = <40>;
            key-positions = <13 21>;
            bindings = <&kp LG(RIGHT_BRACKET)>;
            layers = <0>;
        };
        
        combo_switch_win {
            timeout-ms = <40>;
            key-positions = <10 11>;
            bindings = <&kp LG(GRAVE)>;
            layers = <0>;
        };
        
        combo_search {
            timeout-ms = <40>;
            key-positions = <11 12>;
            bindings = <&kp LG(LS(F))>;
            layers = <0>;
        };
        
        combo_inspect {
            timeout-ms = <40>;
            key-positions = <20 21>;
            bindings = <&kp LG(LA(I))>;
            layers = <0>;
        };
        
        combo_select_element {
            timeout-ms = <40>;
            key-positions = <11 20>;
            bindings = <&kp LG(LS(C))>;
            layers = <0>;
        };
        
        combo_terminal {
            timeout-ms = <40>;
            key-positions = <22 23>;
            bindings = <&kp LC(GRAVE)>;
            layers = <0>;
        };
        
        combo_new_terminal_split {
            timeout-ms = <40>;
            key-positions = <21 22>;
            bindings = <&kp LG(BACKSLASH)>;
            layers = <0>;
        };
        
        combo_open_definition {
            timeout-ms = <40>;
            key-positions = <21 23>;
            bindings = <&kp LC(LS(D))>;
            layers = <0>;
        };
        
        combo_live_share {
            timeout-ms = <40>;
            key-positions = <12 21>;
            bindings = <&kp LC(LS(W))>;
            layers = <0>;
        };
                
	combo_live_share_follow {
            timeout-ms = <50>;
            key-positions = <1 2 3>;
            bindings = <&kp LG(LA(F))>;
            layers = <0>;
        };
        
        combo_git {
            timeout-ms = <40>;
            key-positions = <11 22>;
            bindings = <&kp LC(LS(G))>;
            layers = <0>;
        };
    };

    macros {
    
        paste_new_incog_win: paste_new_incog_win {
            label = "paste_new_incog_win";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LG(LSFT)>
                , <&macro_tap &kp N>
                , <&macro_release &kp LG(LSFT)>
                , <&macro_press &kp LCMD>
                , <&macro_tap &kp V>
                , <&macro_release &kp LCMD>
                ;
        }; 
		
    };

    behaviors {

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp C_NEXT>, <&kp C_PREV>;
        };
				
	mo_sl: momentary_sticky_layer {
	  	compatible = "zmk,behavior-hold-tap";
		label = "MOMENTARY_STICKY_LAYER";
	  	#binding-cells = <2>;
		flavor = "hold-preferred";
		tapping-term-ms = <210>;
	  	bindings = <&mo>, <&sl>;
		};
	
    };

    keymap {
        compatible = "zmk,keymap";
                
        default_layer {
            bindings = <
                &kp Q &kp W &kp F &kp P &kp B 					&kp J &kp L &kp U &kp Y &kp QUOT 
                &kp A &kp R &kp S &kp T &kp G 			        	&kp M &kp N &kp E &kp I &kp O
                &mt LC(LA(LSHIFT)) Z &mt LALT X &mt LCMD C &kp D &kp V    	&kp K &kp H &mt LCMD CMMA &mt LALT DOT &mt LC(LA(LSHIFT)) SLASH
                                	&mo_sl 1 1 &sk LSFT 	 		&mt RCTRL SPC &mo_sl 2 2
            >;
		};

        extend_layer {
            bindings = <
                &kp ESC 	 &mt LG(LS(NUM_5)) LG(LS(NUM_4))  &kp LG(LC(SPC))	&paste_new_incog_win 	&to 4	     		&kp PLUS &kp NUM_7 &kp NUM_8 &kp NUM_9 &key_repeat 
		&mt LSFT RET      &to 3                 &kp DEL              		&kp BSPC           	&td0	            	&kp MINUS &kp NUM_4  &kp NUM_5 &kp NUM_6 &kp RET 
                &kp LG(LA((Z)))   &mt LALT C_VOL_DN     &mt LCMD C_VOL_UP    		&kp TAB              	&mt K_MUTE C_PP     	&kp STAR &kp NUM_1 &kp NUM_2 &kp NUM_3  &kp NUM_0 
	                                                               			&trans   		&trans  		&trans   &trans
            >;
		};
		
	symbol_layer {
            bindings = <
                &kp TILDE &kp EXCL &kp LBRC  &kp RBRC  &kp BSLH    			        &caps_word  &kp CARET &kp DOLLAR &kp EQUAL &kp GRAVE 
                &mt LCTRL RET &kp UNDER  &kp LPAR  &kp RPAR  &kp PERCENT 			&kp LEFT &kp DOWN  &kp UP  &kp RIGHT &kp SEMICOLON
                &kp PLUS  &mt LALT AT &mt LCMD LBKT &kp RBKT   &kp PIPE    			&kp AMPERSAND &kp STAR &mt LCMD HASH &mt LALT MINUS &kp COLON
                                    			&trans &trans  				&trans &trans 
            >;
		};	
		
	window_layer {
            bindings = <
                &kp ESC       	&kp LC(LS(PLUS))   &kp LC(LS(LEFT))     &kp LC(LS(DOWN))       &none 				&none  	&none  	 	 &kp UP        &none		&none
		&kp LC(LS(RET))  &kp LC(LS(MINUS))  &kp LC(LA(LS(LEFT)))  &kp LC(LA(LS(RIGHT))) &kp C_BRIGHTNESS_INC  		&none  	&kp LEFT   	&kp DOWN      &kp RIGHT       &none 
                &kp LC(LS(BSPC)) &rgb_ug RGB_EFF    &kp LC(LS(UP))        &kp LC(LS(RIGHT))       &kp C_BRIGHTNESS_DEC          &none  	&none  		&none  		&none		&none  
                                                                                      &to 0     &trans     			&trans    &to 0
            >;  
		};
		
	control_layer {
            bindings = <
                &bt BT_CLR 	&ext_power EP_TOG   	&rgb_ug RGB_EFF     	&rgb_ug RGB_TOG  	&out OUT_BLE 		&none &none &none &none &none
		&bt BT_NXT  	&rgb_ug RGB_SAI  	&rgb_ug RGB_SPI 	&rgb_ug RGB_HUI 	&rgb_ug RGB_BRI  	&none &none &none &none &none 
                &bt BT_PRV 	&rgb_ug RGB_SAD    	&rgb_ug RGB_SPD        	&rgb_ug RGB_HUD		&rgb_ug RGB_BRD         &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    
                                                                        	&to 0     		&trans     		&trans &to 0
            >;  
		};	
        
	};
};
